rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    function isRepresentative() {
      return isSignedIn() && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'representative');
    }
    
    function isParticipant() {
      return isSignedIn() && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'participant');
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isAssignedRep(requestId) {
      return isSignedIn() && 
        isRepresentative() && 
        get(/databases/$(database)/documents/requests/$(requestId)).data.assigned_rep_id == request.auth.uid;
    }
    
    // Allow all operations in test mode
    match /{document=**} {
      allow read, write: if true;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isAdmin() || isOwner(userId);
      allow delete: if isAdmin();
    }
    
    // Requests collection
    match /requests/{requestId} {
      // Anyone signed in can read requests
      allow read: if isSignedIn();
      
      // Participants can create requests
      allow create: if isParticipant() || isAdmin();
      
      // Participants can update their own requests if in SUBMITTED state
      // Representatives can update requests assigned to them
      allow update: if (isParticipant() && 
                        resource.data.user_id == request.auth.uid && 
                        resource.data.status == 'SUBMITTED') || 
                       isAssignedRep(requestId) || 
                       isAdmin();
      
      // Only admins can delete requests
      allow delete: if isAdmin();
    }
    
    // Products collection
    match /products/{productId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    
    // Points collection
    match /points/{pointsId} {
      allow read: if isSignedIn() && 
                   (resource.data.user_id == request.auth.uid || 
                    isAdmin() || 
                    isRepresentative());
      allow create, update, delete: if isAdmin() || isRepresentative();
    }
  }
}
